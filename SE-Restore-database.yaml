- name: Install PostgreSQL and restore database from S3
  hosts: all
  become: yes
  vars:
    db_name: redhatdb
    db_user: redhat
    s3_bucket: ansible.database
    backup_file: db-backup-{{ ansible_date_time.date }}.sql.gz
    backup_file_path: /tmp/{{ backup_file }}
  tasks:

    - name: Install PostgreSQL and utilities
      apt:
        name:
          - postgresql
          - postgresql-contrib
          - awscli
        state: present

    - name: Download database backup from S3
      command: >
        aws s3 cp s3://{{ s3_bucket }}/{{ backup_file }}
        {{ backup_file_path }}
      register: s3_download
      changed_when: "'downloaded' in s3_download.stdout"

    - name: Debug S3 download result
      debug:
        msg: "Backup file downloaded: {{ s3_download.stdout }}"

    - name: Check if backup file exists
      stat:
        path: "{{ backup_file_path }}"
      register: backup_file_stat

    - name: Fail if backup file does not exist
      fail:
        msg: "Backup file does not exist at {{ backup_file_path }}"
      when: not backup_file_stat.stat.exists

    - name: Check backup file size
      debug:
        msg: "Backup file size: {{ backup_file_stat.stat.size }} bytes"

    - name: Extract the database backup
      command: >
        gunzip {{ backup_file_path }}
      when: backup_file_stat.stat.exists

    - name: Debug extraction
      debug:
        msg: "Backup file extracted: {{ backup_file_path | replace('.gz', '') }}"

    - name: Restore the PostgreSQL database
      command: >
        psql -U {{ db_user }} {{ db_name }} < /tmp/db-backup-{{ ansible_date_time.date }}.sql
      become_user: postgres
      environment:
        PGPASSWORD: your_database_password

    - name: Clean up local backup file
      file:
        path: /tmp/db-backup-{{ ansible_date_time.date }}.sql
        state: absent
