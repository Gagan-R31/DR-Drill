- name: Restore PostgreSQL database from S3 backup
  hosts: 18.117.124.96
  remote_user: ubuntu
  become: yes
  vars:
    db_name: redhatdb
    db_user: redhat
    db_password: redhat  # Set the password for the 'redhat' user
    s3_bucket: dr-db
    aws_region: us-east-1
    aws_access_key: AKIAVY2PHB5JDHC5JZWP
    aws_secret_key: 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
    backup_date: "{{ ansible_date_time.date }}"
  tasks:

    - name: Install PostgreSQL, gzip, and unzip
      apt:
        name:
          - postgresql
          - postgresql-client
          - gzip
          - unzip
        state: present
        update_cache: yes

    - name: Configure PostgreSQL to use password authentication for the user
      lineinfile:
        dest: /etc/postgresql/16/main/pg_hba.conf
        regexp: '^local\s+{{ db_name }}\s+{{ db_user }}\s+peer$'
        line: 'local {{ db_name }} {{ db_user }} md5'
        state: present
      notify: Restart PostgreSQL

    - name: Ensure PostgreSQL is listening on localhost
      lineinfile:
        dest: /etc/postgresql/16/main/postgresql.conf
        regexp: '^#?listen_addresses'
        line: "listen_addresses = 'localhost'"
      notify: Restart PostgreSQL

    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted

    - name: Download backup from S3
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
      command: >
        aws s3 cp s3://{{ s3_bucket }}/db-backup-{{ backup_date }}.sql.gz /tmp/db-backup-{{ backup_date }}.sql.gz
        --region {{ aws_region }}
      register: download_status
      failed_when: download_status.rc != 0

    - name: Clean up local backup file
      file:
        path: /tmp/db-backup-{{ backup_date }}.sql.gz
        state: absent

  handlers:
    - name: Restart PostgreSQL
      service:
        name: postgresql
        state: restarted
